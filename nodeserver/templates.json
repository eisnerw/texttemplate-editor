{
	"simple": [
		"// data context:",
		"{'{\"firstName\": \"Robert\", \"lastName\": \"Smith\", \"pets\":[",
		"{\"type\":\"dog\", \"name\": \"Toto\"}",
		",{\"type\":\"cat\", \"name\": \"Dolly\"}",
		",{\"type\":\"zebra\", \"name\": \"Stripes\"}",
		"]}':",
		"// Template:",
		"[{\"Hello\"} {lastName}, {firstName} with {pets=>",
		"   [{pets:#formatPet.#anded()}]",
		"   ,[no pets]",
		"}!!]}",
		"",
		"Subtemplates:",
		"",
		"{#formatPet:[a {type} named {name}]}",
		"{#anded:[{$0.Join(', ',' and ')}]}"		
	],
	"outline": [
		"People:{#data:[",
		"   {.} {[{ ",
		"      lastName}{ ",
		"      firstName.#Prepend(', ')}{    ",
		"      middleName.#Prepend(' ')",
		"   }].ToUpper().#Quoted()} ",
		"      {.} Lastname: {lastName.IfMissing('No Last Name')}   ",
		"      {.} FirstName: {firstName}  ",
		"      {.} Pets {pets=>[({pets.Count()}):  ",
		"         {.} Domesticated ({pets.#Domesticated().Count()}): ",
		"            {.} {pets.#Domesticated():[{#formatPet}]}  ",
		"         {.} Non-domesticated ({pets.#NonDomesticated().Count()}): ",
		"            {.} {pets.#NonDomesticated():[{#formatPet}]}    ",
		"   ],[no pets]",
		"   } //",
		"].@MissingValue('No Information Provided')}       ",
		" ",
		"Subtemplates:  ",
		"",
		"{#formatPet:[  ",
		"   a {type.Case('zebra',[{[{name}y].ToLower()}],'dog','friskie','cat','fishy','nice')}  `   ",
		"   {type} named {name} ",
		"]}",
		"{#Domesticated: [{$0.Where(type.#IsDomesticated())}]}",
		"{#NonDomesticated: [{$0.Where(!type.#IsDomesticated())}]} ",
		"{#IsDomesticated:[{$0.Matches('dog','cat')}]}  ",
		"{#Prepend:[{$0->[{$1}{$0}]}]}",
		"{#Surround:[{$0->[{$1}{$0}{$1}]}]}",
		"{#Quoted:[{$0->[{$0.#Surround('\"')}]}]}",
		"{#data:[/data/people]}"
	],
	"bullets": [
		"Shows use of bullet styles as well as modular subtemplates, automatic bulleting,`",
		"and indenting only for multiple values",
		"",
		"People:{#data:[",
		"   {.} {[{ ",
		"      lastName}{ ",
		"      firstName.#Prepend(', ')}{    ",
		"      middleName.#Prepend(' ')",
		"   }].ToUpper().#Quoted()} ",
		"      {.} Lastname: {lastName.IfMissing('No Last Name')}   ",
		"      {.} FirstName: {firstName}  ",
		"      {.} Pets {pets=>[({pets.Count()}):  ",
		"         {.} Domesticated{#dpetcnt > 1->[ ({#dpetcnt})]}: {pets.#Domesticated():[{#formatPet}]}  ",
		"         {.} Non-domesticated{#ndpetcnt > 1->[({#ndpetcnt})]} : {pets.#NonDomesticated():[{#formatPet}]}",
		"   ],[no pets]",
		"   } //",
		"].@MissingValue('No Information Provided').@BulletStyle('I.','(a)','â€¢','1.')}",
		" ",
		"Subtemplates:  ",
		"",
		"{#formatPet:[  ",
		"   a {type.Case('zebra',[{[{name}y].ToLower()}],'dog','friskie','cat','fishy','nice')}  `   ",
		"   {type} named {name} ",
		"]}",
		"{#Domesticated: [{$0.Where(type.#IsDomesticated())}]}",
		"{#NonDomesticated: [{$0.Where(!type.#IsDomesticated())}]} ",
		"{#IsDomesticated:[{$0.Matches('dog','cat')}]}  ",
		"{#Prepend:[{$0->[{$1}{$0}]}]}",
		"{#Surround:[{$0->[{$1}{$0}{$1}]}]}",
		"{#Quoted:[{$0->[{$0.#Surround('\"')}]}]}",
		"{#dpetcnt:[{pets.#Domesticated().Count()}]}",
		"{#ndpetcnt:[{pets.#NonDomesticated().Count()}]}",
		"{#data:[/data/people]}"
	],
	"web": [
		"Here is an example of tagging and styling using Text Templates:",
		"{[Hello {'test'.#Style('outlined-red-dots')} `",
		"{\"World\".#Style('italic','bold','red')}!!] ",
		".#Style('normal','blue').#Tag('h2').#ToHtml()} ",
		"Here's an example of a ` ",
		"{",
		"   'Link'.#Click(",
		"         'simple'  // the link name",
		"         ,'Click this to load a simple template'",
		"         , 'link','italic' // style attributes",
		"      )",
		"} you can hover over and click.",
		"",
		"{#external}",
		"Subtemplates:",
		"{#Style: ",
		"[<span style=\"{$1.#StyleCases(",
		"   $2,$3,$4,$5,$6,$7,$8,$9  ",
		")}\">{$0}</span>]} ",
		"{#ToHtml:[<pre><span>{$0}</span><pre>]}",
		"{#Tag:[<{$1}>{$0}</{$1}>]}",
		"{#Click:[<a title='{$2=>[{$2}],[Click this]}' `",
		"   onclick=\"document.location='/#{$1}'; `",
		"   document.location.reload()\">{$0}</a>]",
		"   .#OptionalStyle('link',$2,$3,$4,$5,$6,$7,$8,$9)}",
		"{#StyleCases:[ `",
		"   {$0",
		"      .Case(",
		"         'italic','font-style:italic'",
		"         ,'normal','font-weight:normal;white-space:normal'",
		"         ,'bold','font-weight:bold'",
		"         ,'red','color:red'",
		"         ,'blue','color:blue'",
		"         ,'black','color:black'",
		"         ,'outlined-red-dots','outline-color:red;outline-style:dotted'",
		"         ,'underline','text-decoration: underline'",
		"         ,'link','text-decoration: underline;color:blue'",
		"      )",
		"   };",
		"   {$1->[{$1.#StyleCases($2,$3,$4,$5,$6,$7,$8,$9)}]}",
		"]}",
		"{#OptionalStyle:[{$2=>[",
		"      {$0.#Style($2,$3,$4,$5,$6,$7,$8,$9)}",
		"   ],[",
		"      {$0.#Style($1)}]}",
		"]}",
		"{#external:[",
		"This is an example of an external data source (in this case, Github)",
		"",
		"my repos: {'https://api.github.com/users/eisnerw/repos': #formatGitRepos}",
		"Subtemplates:    ",
		"",
		"{#formatGitRepos:[- {name}{description->[ ({description})]}]} ",
		"]}"
	],
	"tests": [
		"{#tests.Assert(#expected,'ALL TESTS PASSED')}",
		"",
		"Subtemplates:",
		"{#test:[{$0.Matches(1,2,3,4,5,6,7,8,9,10,11,12,13,14)->",
		"[Test {$0} {$1.Assert($2,'passed')}]}]}",
		"{#test1:[",
		"Explicit Single Indent{#data:[",
		"   {lastName}]}]}",
		"{#test1Result:[",
		"Explicit Single Indent",
		"   Johnson",
		"   Smith]}",
		"{#test2:[",
		"Implied Single Indent {#data:[{lastName}]}]}",
		"{#test2Result:[",
		"Implied Single Indent ",
		"   Johnson",
		"   Smith]}",
		"{#test3:[",
		"Implied Double Indent{#data:[{lastName}{pets:[{name}]}]}]}",
		"{#test3Result:[",
		"Implied Double Indent",
		"   Johnson",
		"      Buddy",
		"      Ralph",
		"      Stripes",
		"   Smith",
		"      Toto",
		"      Dolly",
		"      Stripes]}",
		"{#test4:[",
		"Bulleted Implied Bulleted Indent{#data:[ //",
		"{.} {lastName}{pets:[{name}]}]}]}",
		"{#test4Result:[",
		"Bulleted Implied Bulleted Indent",
		"(0.0) Johnson",
		"   (1.0) Buddy",
		"   (1.1) Ralph",
		"   (1.2) Stripes",
		"(0.1) Smith",
		"   (1.0) Toto",
		"   (1.1) Dolly",
		"   (1.2) Stripes]}",
		"{#test5:[",
		"Bulleted Explicit Bulleted Indent{#data:[ //",
		"{.} {lastName}{pets:[ //",
		"    {.} {name}]}]}]}",
		"{#test5Result:[",
		"Bulleted Explicit Bulleted Indent",
		"(0.0) Johnson",
		"    (1.0) Buddy",
		"    (1.1) Ralph",
		"    (1.2) Stripes",
		"(0.1) Smith",
		"    (1.0) Toto",
		"    (1.1) Dolly",
		"    (1.2) Stripes]}",
		"{#test6:[",
		"Hierarchy{#data:[ //",
		"{.} {lastName}{pets:[ //",
		"    {.} {name} who is owned by ",
		"         {.} {^.^:[{firstName} who owns",
		"              {.} {pets:[{type}]}]}]}]}]}",
		"{#test6Result:[",
		"Hierarchy",
		"(0.0) Johnson",
		"    (1.0) Buddy who is owned by ",
		"         (2.0) Doris who owns",
		"              (3.0) dog",
		"              (3.1) lion",
		"              (3.2) tiger",
		"    (1.1) Ralph who is owned by ",
		"         (2.0) Doris who owns",
		"              (3.0) dog",
		"              (3.1) lion",
		"              (3.2) tiger",
		"    (1.2) Stripes who is owned by ",
		"         (2.0) Doris who owns",
		"              (3.0) dog",
		"              (3.1) lion",
		"              (3.2) tiger",
		"(0.1) Smith",
		"    (1.0) Toto who is owned by ",
		"         (2.0) John who owns",
		"              (3.0) dog",
		"              (3.1) cat",
		"              (3.2) zebra",
		"    (1.1) Dolly who is owned by ",
		"         (2.0) John who owns",
		"              (3.0) dog",
		"              (3.1) cat",
		"              (3.2) zebra",
		"    (1.2) Stripes who is owned by ",
		"         (2.0) John who owns",
		"              (3.0) dog",
		"              (3.1) cat",
		"              (3.2) zebra]}",
		"{#test7:[",
		"Hierarchy that transitions from indent to bullet {#data:[ //",
		"{lastName}{pets:[ //",
		"    {.} {name} who is owned by ",
		"         {.} {^.^:[{firstName} who owns",
		"            {.} {pets:[{type}]}]}]}]}]}",
		"{#test7Result:[",
		"Hierarchy that transitions from indent to bullet ",
		"Johnson",
		"    (0.0) Buddy who is owned by ",
		"         (1.0) Doris who owns",
		"            (2.0) dog",
		"            (2.1) lion",
		"            (2.2) tiger",
		"    (0.1) Ralph who is owned by ",
		"         (1.0) Doris who owns",
		"            (2.0) dog",
		"            (2.1) lion",
		"            (2.2) tiger",
		"    (0.2) Stripes who is owned by ",
		"         (1.0) Doris who owns",
		"            (2.0) dog",
		"            (2.1) lion",
		"            (2.2) tiger",
		"Smith",
		"    (0.0) Toto who is owned by ",
		"         (1.0) John who owns",
		"            (2.0) dog",
		"            (2.1) cat",
		"            (2.2) zebra",
		"    (0.1) Dolly who is owned by ",
		"         (1.0) John who owns",
		"            (2.0) dog",
		"            (2.1) cat",
		"            (2.2) zebra",
		"    (0.2) Stripes who is owned by ",
		"         (1.0) John who owns",
		"            (2.0) dog",
		"            (2.1) cat",
		"            (2.2) zebra]}",
		"{#test8:[",
		"Hierarchy that also transitions from indent to bullet {#data:[ //",
		"  {firstName} {lastName} who owns {pets:[{name} who is owned by ",
		"         {.} {^.^:[{firstName} who owns",
		"            {.} {pets:[{type}]}]}]}]}]}",
		"{#test8Result:[",
		"Hierarchy that also transitions from indent to bullet ",
		"  Doris Johnson who owns ",
		"      Buddy who is owned by ",
		"         (0.0) Doris who owns",
		"            (1.0) dog",
		"            (1.1) lion",
		"            (1.2) tiger",
		"      Ralph who is owned by ",
		"         (0.0) Doris who owns",
		"            (1.0) dog",
		"            (1.1) lion",
		"            (1.2) tiger",
		"      Stripes who is owned by ",
		"         (0.0) Doris who owns",
		"            (1.0) dog",
		"            (1.1) lion",
		"            (1.2) tiger",
		"  John Smith who owns ",
		"      Toto who is owned by ",
		"         (0.0) John who owns",
		"            (1.0) dog",
		"            (1.1) cat",
		"            (1.2) zebra",
		"      Dolly who is owned by ",
		"         (0.0) John who owns",
		"            (1.0) dog",
		"            (1.1) cat",
		"            (1.2) zebra",
		"      Stripes who is owned by ",
		"         (0.0) John who owns",
		"            (1.0) dog",
		"            (1.1) cat",
		"            (1.2) zebra]}",
		"{#test9:[",
		"Continued list {#data:[{pets:[{name}]}]}]}",
		"{#test9Result:[",
		"Continued list ",
		"   Buddy",
		"   Ralph",
		"   Stripes",
		"   Toto",
		"   Dolly",
		"   Stripes]}",
		"{#test10:[",
		"Bulleted Continued list ` ",
		"{#data:[{pets:[ ",
		"    {.} {name}]}]}]}",
		"{#test10Result:[",
		"Bulleted Continued list ",
		"    (0.0) Buddy",
		"    (0.1) Ralph",
		"    (0.2) Stripes",
		"    (0.3) Toto",
		"    (0.4) Dolly",
		"    (0.5) Stripes]}",
		"{#test11:[",
		"Hierarchy that also transitions from indent to bullet and back {#data:[ //",
		"{lastName} who owns ",
		"    {.} {pets:[{name} who is owned by ",
		"         {^.^:[{firstName} who owns ",
		"             {.} {pets:[{type} // ",
		"            ]}]}]}]}]}",
		"{#test11Result:[",
		"Hierarchy that also transitions from indent to bullet and back ",
		"Johnson who owns ",
		"    (0.0) Buddy who is owned by ",
		"         Doris who owns ",
		"             (1.0) dog",
		"             (1.1) lion",
		"             (1.2) tiger",
		"    (0.1) Ralph who is owned by ",
		"         Doris who owns ",
		"             (1.0) dog",
		"             (1.1) lion",
		"             (1.2) tiger",
		"    (0.2) Stripes who is owned by ",
		"         Doris who owns ",
		"             (1.0) dog",
		"             (1.1) lion",
		"             (1.2) tiger",
		"Smith who owns ",
		"    (0.0) Toto who is owned by ",
		"         John who owns ",
		"             (1.0) dog",
		"             (1.1) cat",
		"             (1.2) zebra",
		"    (0.1) Dolly who is owned by ",
		"         John who owns ",
		"             (1.0) dog",
		"             (1.1) cat",
		"             (1.2) zebra",
		"    (0.2) Stripes who is owned by ",
		"         John who owns ",
		"             (1.0) dog",
		"             (1.1) cat",
		"             (1.2) zebra]}",
		"{#test12:[",
		"Additional variation of hierarchy that also transitions from indent to bullet `",
		" and back {#data:[ //",
		"{lastName} who owns ",
		"    {.} {pets:[{name} who is owned by ",
		"        {.} {^.^:[{firstName} who owns {pets:[{type} //  ",
		"            ]}]}]}]}]}",
		"{#test12Result:[",
		"Additional variation of hierarchy that also transitions from indent to bullet and back ",
		"Johnson who owns ",
		"    (0.0) Buddy who is owned by ",
		"        (1.0) Doris who owns ",
		"           (2.0) dog",
		"           (2.1) lion",
		"           (2.2) tiger",
		"    (0.1) Ralph who is owned by ",
		"        (1.0) Doris who owns ",
		"           (2.0) dog",
		"           (2.1) lion",
		"           (2.2) tiger",
		"    (0.2) Stripes who is owned by ",
		"        (1.0) Doris who owns ",
		"           (2.0) dog",
		"           (2.1) lion",
		"           (2.2) tiger",
		"Smith who owns ",
		"    (0.0) Toto who is owned by ",
		"        (1.0) John who owns ",
		"           (2.0) dog",
		"           (2.1) cat",
		"           (2.2) zebra",
		"    (0.1) Dolly who is owned by ",
		"        (1.0) John who owns ",
		"           (2.0) dog",
		"           (2.1) cat",
		"           (2.2) zebra",
		"    (0.2) Stripes who is owned by ",
		"        (1.0) John who owns ",
		"           (2.0) dog",
		"           (2.1) cat",
		"           (2.2) zebra]}",
		"{#test13:[",
		"Yet another variation of hierarchy that also transitions from indent to bullet `",
		" and back {#data:[ //",
		"{lastName} who owns ",
		"    {.} {pets:[{name} who is owned by ",
		"        {^.^:[{firstName} who owns {pets:[{type} //  ",
		"            ]}]}]}]}]}",
		"{#test13Result:[",
		"Yet another variation of hierarchy that also transitions from indent to bullet and back ",
		"Johnson who owns ",
		"    (0.0) Buddy who is owned by ",
		"        Doris who owns ",
		"           dog",
		"           lion",
		"           tiger",
		"    (0.1) Ralph who is owned by ",
		"        Doris who owns ",
		"           dog",
		"           lion",
		"           tiger",
		"    (0.2) Stripes who is owned by ",
		"        Doris who owns ",
		"           dog",
		"           lion",
		"           tiger",
		"Smith who owns ",
		"    (0.0) Toto who is owned by ",
		"        John who owns ",
		"           dog",
		"           cat",
		"           zebra",
		"    (0.1) Dolly who is owned by ",
		"        John who owns ",
		"           dog",
		"           cat",
		"           zebra",
		"    (0.2) Stripes who is owned by ",
		"        John who owns ",
		"           dog",
		"           cat",
		"           zebra]}",
		"{#test14:[",
		"Indent under indent under bullet {#data:[ //",
		"{lastName} who owns ",
		"    {.} {pets:[{name} who is owned by ",
		"             {^.^:[{firstName} who owns ",
		"                 {pets:[{type} //  ",
		"            ]}]}]}]}]}",
		"{#test14Result:[",
		"Indent under indent under bullet ",
		"Johnson who owns ",
		"    (0.0) Buddy who is owned by ",
		"             Doris who owns ",
		"                 dog",
		"                 lion",
		"                 tiger",
		"    (0.1) Ralph who is owned by ",
		"             Doris who owns ",
		"                 dog",
		"                 lion",
		"                 tiger",
		"    (0.2) Stripes who is owned by ",
		"             Doris who owns ",
		"                 dog",
		"                 lion",
		"                 tiger",
		"Smith who owns ",
		"    (0.0) Toto who is owned by ",
		"             John who owns ",
		"                 dog",
		"                 cat",
		"                 zebra",
		"    (0.1) Dolly who is owned by ",
		"             John who owns ",
		"                 dog",
		"                 cat",
		"                 zebra",
		"    (0.2) Stripes who is owned by ",
		"             John who owns ",
		"                 dog",
		"                 cat",
		"                 zebra]}",
		"{#tests:[ //",
		"{'1'.#test(#test1,#test1Result)}",
		"{'2'.#test(#test2,#test2Result)}",
		"{'3'.#test(#test3,#test3Result)}",
		"{'4'.#test(#test4,#test4Result)}",
		"{'5'.#test(#test5,#test5Result)}",
		"{'6'.#test(#test6,#test6Result)}",
		"{'7'.#test(#test7,#test7Result)}",
		"{'8'.#test(#test8,#test8Result)}",
		"{'9'.#test(#test9,#test9Result)}",
		"{'10'.#test(#test10,#test10Result)}",
		"{'11'.#test(#test11,#test11Result)}",
		"{'12'.#test(#test12,#test12Result)}",
		"{'13'.#test(#test13,#test13Result)}",
		"{'14'.#test(#test14,#test14Result)}",
		"]}",
		"{#expected:[ //",
		"Test 1 passed",
		"Test 2 passed",
		"Test 3 passed",
		"Test 4 passed",
		"Test 5 passed",
		"Test 6 passed",
		"Test 7 passed",
		"Test 8 passed",
		"Test 9 passed",
		"Test 10 passed",
		"Test 11 passed",
		"Test 12 passed",
		"Test 13 passed",
		"Test 14 passed",
		"]}",
		"{#data:[/data/people]}"
	]
	,"events":[
		"// {'/data/events':[{^.ToJson()}]} /* uncomment this line to see the data */",
		"{'/data/events'.Group(start.ToDate(), 'start', 'group'):[ `",
		"{start.ToUpper()} ",
		"   {group.OrderBy(start.ToDate('HHmm')):[{start.#formatTimes(end)}: {summary} ",
		"      {.} Notes: {description}",
		"      {.} Location {location}]}",
		"].@DateTest(/(star|end)/i).@BulletStyle('â€¢').@DateFormat('dddd MMM D')}",
		"Subtemplates:",
		"{#SameDay:[{$0.ToDate('YYYYMMDD') = $1.ToDate('YYYYMMDD')}]}",
		"{#SameAMPM:[{$0.ToDate('a') = $1.ToDate('a') & $0.#SameDay($1)}]}",
		"{#onHour:[{$0.ToDate('mm') = '00'}]}",
		"{#formatTimes:[",
		"   {",
		"   // Don't put am/pm for the start time if on the hour and same as end",
		"   $0.ToDate([h{!$0.#onHour()->[:mm]}{!$0.#SameAMPM($1)->[a]}])",
		"   }-{",
		"   !$1.#SameDay($0)->[{$1.ToDate().ToUpper()} at ]}{$1.ToDate('h:mma')",
		"   }",
		"]}"	
	]
	,"birthdays":[
		"// change the '1' to '2' to see grouping by astrological sign and year",
		"// '3' to see ungrouped data",
		"{'1'.#grouping()} ",
		"Subtemplates:",
		"{#grouping:[{$0.Case(3,[{#ungrouped}],2,[{#bySign}],[{#byDate}])}]}",
		"{#byDate:[{'/data/famousBirthdays'.Group(dob.ToDate('MM'),'month','group'):",
		"     [{[2020-{month}-01].ToDate('MMMM')}{ // using the date formatter for the month",
		"        group.Group(dob.ToDate('DD'),'day','daygroup')",
		"          .OrderBy(day):[{day}",
		"     {daygroup",
		"          .OrderBy(dob, 'D'):",
		"               [{#name} {#date}]}]}]}]}",
		"{#bySign:[{'/data/famousBirthdays'.Group(sign,'sign','group'):",
		"     [{sign}{group.Group(dob.ToDate('yyyy'),'year','yeargroup')",
		"          .OrderBy(year,'D'):[{year}",
		"     {yeargroup",
		"          .OrderBy(dob, 'A'):",
		"               [{fname->[{fname} ]}{lname} {#date}]}]}]}]}",
		"{#name:[{fname->[{fname} ]}{lname}]}               ",
		"{#date:[({dob.ToDate()})]}",
		"{#ungrouped:[{'/data/famousBirthdays'.OrderBy(lname.ToUpper()):",
		"   [{#name} {#date} {sign}]}]}"
	]
}